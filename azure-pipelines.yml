# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
variables:
  tfBackendStorageAccountName: terra01
  tfBackendStorageContainerName: terrastate
  tfBackendSAAccessKey: p6DX04JuXqhNumFxhO2TECa/uizXGwqNV3TNlg2V38y/0O6Uyeik+78Sz0M7Unpz29qQzHHzpVHv+AStQT9+yQ==
  tfBackendFileName: abtfstate


pool:
  vmImage: ubuntu-latest

stages:
  - stage: Validate
    jobs:
      -  job: Validateandinstall
         displayName: validating the terrafrom
         steps:
         - task: TerraformInstaller@0
           inputs:
             terraformVersion: 'latest'
         -  script: |
              ls $(System.DefaultWorkingDirectory)
              az login --service-principal -u $(client_id) -p $(client_secret) --tenant $(tenant_id)
              terraform init -backend-config="storage_account_name=$(tfBackendStorageAccountName)" -backend-config="container_name=$(tfBackendStorageContainerName)" -backend-config="access_key=$(tfBackendSAAccessKey)" -backend-config="key=$(tfBackendFileName)-dev" 
              terraform plan -var-file="./dev/qa.tfvars" -out="out.plan" -var="client_id=$(client_id)" -var="client_secret=$(client_secret)" -var="tenant_id=$(tenant_id)" -var="subscription_id=$(subscription_id)"


